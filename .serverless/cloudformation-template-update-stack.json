{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "UserSignUpLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mixy-dev-userSignUp"
      }
    },
    "UserLoginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mixy-dev-userLogin"
      }
    },
    "DailyWordLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/mixy-dev-dailyWord"
      }
    },
    "UserSignUpLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-4da07052-7650",
          "S3Key": "serverless/mixy/dev/1733787341392-2024-12-09T23:35:41.392Z/userSignUp.zip"
        },
        "Handler": "src/backend/functions/userSignup/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "mixy-dev-userSignUp",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::586794471369:role/serverless"
      },
      "DependsOn": [
        "UserSignUpLogGroup"
      ]
    },
    "UserLoginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-4da07052-7650",
          "S3Key": "serverless/mixy/dev/1733787341392-2024-12-09T23:35:41.392Z/userLogin.zip"
        },
        "Handler": "src/backend/functions/userLogin/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "mixy-dev-userLogin",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::586794471369:role/serverless"
      },
      "DependsOn": [
        "UserLoginLogGroup"
      ]
    },
    "DailyWordLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-4da07052-7650",
          "S3Key": "serverless/mixy/dev/1733787341392-2024-12-09T23:35:41.392Z/dailyWord.zip"
        },
        "Handler": "src/backend/functions/dailyWord/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "mixy-dev-dailyWord",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::586794471369:role/serverless"
      },
      "DependsOn": [
        "DailyWordLogGroup"
      ]
    },
    "UserLoginLambdaVersionAiRxJPq7fYaDz8g67kSH6EMpsm4vAz9IVuKyuGUM72g": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UserLoginLambdaFunction"
        },
        "CodeSha256": "ZIfqXd8Cm5b1RpxWs3R8qIfHoyUFmkdwUnjuXkZjdPc="
      }
    },
    "DailyWordLambdaVersionXvahrWyGNcnBGmRB9rVcH3wVEgUtl5pqRQO4N5kRmYU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DailyWordLambdaFunction"
        },
        "CodeSha256": "ZIfqXd8Cm5b1RpxWs3R8qIfHoyUFmkdwUnjuXkZjdPc="
      }
    },
    "UserSignUpLambdaVersionwGkjGKtqAKG28R28L6qhE8dQ8eyXvZtQLswQ3yhEU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UserSignUpLambdaFunction"
        },
        "CodeSha256": "ZIfqXd8Cm5b1RpxWs3R8qIfHoyUFmkdwUnjuXkZjdPc="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-mixy",
        "ProtocolType": "HTTP",
        "CorsConfiguration": {
          "AllowHeaders": [
            "Content-Type"
          ],
          "AllowMethods": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "OPTIONS"
          ],
          "AllowOrigins": [
            "*"
          ]
        }
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "UserSignUpLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UserSignUpLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUserSignUp": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UserSignUpLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostSignup": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /signup",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUserSignUp"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUserSignUp"
    },
    "UserLoginLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UserLoginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUserLogin": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UserLoginLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostLogin": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /login",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUserLogin"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUserLogin"
    },
    "DailyWordLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DailyWordLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationDailyWord": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "DailyWordLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetDailyword": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /dailyword",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationDailyWord"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationDailyWord"
    },
    "Users": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "Users",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "DailyWord": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "DailyWord",
        "AttributeDefinitions": [
          {
            "AttributeName": "date",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "date",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-eu-north-1-4da07052-7650",
      "Export": {
        "Name": "sls-mixy-dev-ServerlessDeploymentBucketName"
      }
    },
    "UserLoginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UserLoginLambdaVersionAiRxJPq7fYaDz8g67kSH6EMpsm4vAz9IVuKyuGUM72g"
      },
      "Export": {
        "Name": "sls-mixy-dev-UserLoginLambdaFunctionQualifiedArn"
      }
    },
    "DailyWordLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DailyWordLambdaVersionXvahrWyGNcnBGmRB9rVcH3wVEgUtl5pqRQO4N5kRmYU"
      },
      "Export": {
        "Name": "sls-mixy-dev-DailyWordLambdaFunctionQualifiedArn"
      }
    },
    "UserSignUpLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UserSignUpLambdaVersionwGkjGKtqAKG28R28L6qhE8dQ8eyXvZtQLswQ3yhEU"
      },
      "Export": {
        "Name": "sls-mixy-dev-UserSignUpLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-mixy-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-mixy-dev-HttpApiUrl"
      }
    }
  }
}